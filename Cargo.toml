[workspace]
members = [".", "crates/saft-sdf"]

[workspace.package]
edition = "2021"
rust-version = "1.76.0"

[package]
name = "saft"
version = "0.34.1"
authors = [
    "Embark <opensource@embark-studios.com>",
    "Niklas Nummelin <niklas.nummelin@embark-studios.com>",
]
description = "Signed distance field function compiler/interpreter/discretizer/mesher"
license = "MIT OR Apache-2.0"
keywords = ["gamedev", "sdf"]
categories = ["game-development", "graphics"]
edition.workspace = true
rust-version.workspace = true
publish = true

[lints]
workspace = true

[lib]
doctest = false
test = true

[[bench]]
harness = false
name = "benchmark"

[dependencies]
ahash = { version = "0.8.1", default-features = false, features = [
    "no-rng", # we don't need DOS-protection, so we let users opt-in to it instead
    "std",
] }
arbitrary = { version = "1", optional = true, features = ["derive"] }
bincode = { version = "1.3", optional = true }
glam = "=0.27.0"
num_enum = "0.7.0"
rayon = { version = "1.5", optional = true }
serde = { version = "1.0.104", features = ["derive"], optional = true }
# This commit of `speedy` supports glam 0.27. This can be changed back to a version once a new version is released.
speedy = { git = "https://github.com/koute/speedy.git", rev = "81c665c", optional = true, features = [
    "glam",
] }
thiserror = "1"

saft-sdf = { version = "0.2.0", path = "crates/saft-sdf", features = [
    "with_opcode_derives",
] }

[dev-dependencies]
# can't use workspace dependency for tiny-bench since it as a wildcard version
tiny-bench = "0.3.0"

[features]
default = ["optimized", "std"]

optimized = []
std = ["glam/std"]
with_arbitrary = ["arbitrary", "saft-sdf/with_arbitrary"]
with_bincode = ["bincode"]
# NOTE[TSolberg]: This feature can cause Rayon to overflow the stack when lots of creatures exist.
#                 This can occur if those creatures have very high complexity so lots of creatures
#                 are getting baked at the same time, generating overlapping long-running jobs.
with_rayon = ["rayon"]
with_serde = ["serde", "glam/serde", "saft-sdf/with_serde"]
with_speedy = ["speedy", "saft-sdf/with_speedy"]

[workspace.lints.clippy]
all = "warn"
await_holding_lock = "warn"
branches_sharing_code = "warn"
cast_lossless = "warn"
char_lit_as_u8 = "warn"
checked_conversions = "warn"
clear_with_drain = "warn"
dbg_macro = "warn"
debug_assert_with_mut_call = "warn"
default_union_representation = "warn"
derive_partial_eq_without_eq = "allow"
disallowed_methods = "warn"
disallowed_script_idents = "warn"
disallowed_types = "warn"
doc_link_with_quotes = "warn"
doc_markdown = "warn"
empty_enum = "warn"
empty_line_after_outer_attr = "warn"
enum_glob_use = "warn"
equatable_if_let = "warn"
exit = "warn"
expl_impl_clone_on_copy = "warn"
explicit_deref_methods = "warn"
explicit_into_iter_loop = "warn"
fallible_impl_from = "warn"
filter_map_next = "warn"
flat_map_option = "warn"
float_cmp_const = "warn"
fn_params_excessive_bools = "warn"
fn_to_numeric_cast_any = "warn"
format_collect = "allow"
from_iter_instead_of_collect = "warn"
if_let_mutex = "warn"
implicit_clone = "warn"
implied_bounds_in_impls = "warn"
imprecise_flops = "warn"
index_refutable_slice = "warn"
inefficient_to_string = "warn"
invalid_upcast_comparisons = "warn"
iter_not_returning_iterator = "warn"
large_digit_groups = "warn"
large_include_file = "warn"
large_stack_arrays = "warn"
large_types_passed_by_value = "warn"
let_unit_value = "warn"
linkedlist = "warn"
lossy_float_literal = "warn"
macro_use_imports = "warn"
manual_instant_elapsed = "warn"
manual_let_else = "warn"
manual_ok_or = "warn"
map_err_ignore = "warn"
map_flatten = "warn"
map_unwrap_or = "warn"
match_on_vec_items = "warn"
match_same_arms = "warn"
match_wild_err_arm = "warn"
match_wildcard_for_single_variants = "warn"
mem_forget = "warn"
mismatched_target_os = "warn"
missing_enforced_import_renames = "warn"
mod_module_files = "warn"
mut_mut = "warn"
mutex_integer = "warn"
needless_borrow = "warn"
needless_continue = "warn"
needless_for_each = "warn"
needless_pass_by_ref_mut = "warn"
negative_feature_names = "warn"
nonstandard_macro_braces = "warn"
option_option = "warn"
path_buf_push_overwrite = "warn"
print_stderr = "warn"
print_stdout = "warn"
ptr_as_ptr = "warn"
ptr_cast_constness = "warn"
rc_mutex = "warn"
readonly_write_lock = "warn"
ref_option_ref = "warn"
rest_pat_in_fully_bound_structs = "warn"
same_functions_in_if_condition = "warn"
semicolon_if_nothing_returned = "warn"
should_panic_without_expect = "warn"
single_match_else = "warn"
string_add = "warn"
string_add_assign = "warn"
string_lit_as_bytes = "warn"
string_lit_chars_any = "warn"
string_to_string = "warn"
todo = "warn"
trailing_empty_array = "warn"
trait_duplication_in_bounds = "allow"
transmute_ptr_to_ptr = "warn"
undocumented_unsafe_blocks = "warn"
unimplemented = "warn"
uninlined_format_args = "allow"
unnecessary_box_returns = "warn"
unnecessary_safety_comment = "warn"
unnecessary_safety_doc = "warn"
unnecessary_self_imports = "warn"
unnecessary_wraps = "warn"
unnested_or_patterns = "warn"
unused_self = "warn"
use_self = "warn"
useless_let_if_seq = "warn"
useless_transmute = "warn"
verbose_file_reads = "warn"
wildcard_enum_match_arm = "warn"
zero_sized_map_values = "warn"

[workspace.lints.rust]
future_incompatible = "warn"
nonstandard_style = "warn"
rust_2018_idioms = "warn"
trivial_numeric_casts = "warn"
unsafe_op_in_unsafe_fn = "warn"
unexpected_cfgs = { level = "warn", check-cfg = [
    'cfg(target_arch, values("spirv"))',
] }
